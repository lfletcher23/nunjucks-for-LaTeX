{
    "name": "nunjucks",
    "patterns": [
        {   
            "name": "comment.line.nunjucks",
            "begin": "%!",
            "end": "!%"
        },
        {   
            "name": "comment.block.nunjucks",
            "begin": "\\[## comment ##\\]",
            "end": "\\[## endcomment ##\\]"
        },
        {   
            "name": "storage.type.var.nunjucks",
            "contentName": "variable.nunjucks",
            "begin": "#!",
            "end": "!#",
            "patterns": [
                {"include": "#inside_block"}
            ]
        },
        {
            "name": "support.class.nunjucks",
            "contentName": "variable.nunjucks",
            "begin": "\\[##",
            "end": "##\\]",
            "patterns": [
                {"include": "#inside_block"}
            ]
        }
    ],
    "repository": {
        "inside_block": {
            "patterns": [
                {
                    "name": "constant.language.nunjucks",
                    "match": "((true|false|and|or|not|as|in)\\b)}"
                },
                {
                    "name": "constant.language.nunjucks",
                    "match": "((safe|title|capitalize|join|escape|dump|first|float|groupby|abs|batch|center|default|dictsort|forceescape|indent|int|last|length|list|lower|random|reject|rejectattr|replace|reverse|round|safe|select|selectattr|slice|sort|string|striptags|sum|title|trim|truncate|upper|urlencode|urlize|wordcount)\\b)}"
                },
                {
                    "name": "keyword.operator.nunjucks",
                    "match": "\\|"
                },
                {
                    "name": "variable.language.nunjucks",
                    "match": "((macro|endmacro|if|endif|for|endfor|else|elif|asyncEach|endeach|asyncAll|set|endset|block|endblock|filter|endfilter|call|endcall)\\b)"
                },
                {
                    "name": "variable.language.nunjucks",
                    "match": "((import|extends|from|include|new|ignore|missing|var|context)\\b)"
                },
                {
                    "name": "string.nunjucks",
                    "match": "([\"'])(?:(?=(\\?))\\2.)*?\\1"
                },
                {
                    "name": "entity.name.function.nunjucks",
                    "contentName": "variable.nunjucks",
                    "begin": "\\w+\\(",
                    "end": "\\)",
                    "patterns": [
                        {"include": "#inside_function"}
                    ]
                }
            ]
        },
        "inside_function": {
            "patterns": [
                {
                    "name": "string.nunjucks",
                    "match": "([\"'])(?:(?=(\\?))\\2.)*?\\1"
                }
            ]
        }
    },
    "scopeName": "source.nunjucks"
}